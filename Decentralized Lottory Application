//SPDX-License Identifier: MIT
pragma solidity >=0.6.6 <0.9.0;

contract Lottory
{

 address public manager;
 address payable[] public participants;
 address payable commission= 0xdD870fA1b7C4700F2BD7f44238821C26f7392148;
 constructor() public{
         manager = msg.sender;
     }

 function PayforLottory() external payable
  {
       require(msg.value==1 ether);
        participants.push(payable(msg.sender));
        commission.transfer(msg.value/100);
  }

function getBalance() public view returns(uint256){
    require(msg.sender == manager);
    return address(this).balance;
}
 
 function random() public view returns(uint256){
    return uint(keccak256(abi.encodePacked(block.difficulty,block.timestamp,participants.length)));
 }
function selectWinner() public
{
    require(msg.sender==manager);
    require(participants.length>=3);
    uint256 r =random();
    uint256 index= r % participants.length;
    address payable winner=participants[index];
    winner.transfer(getBalance());
    participants =new address payable[](0);
}

}
